---
- name: "System / Package / Usage example"
  hosts: "localhost"
  gather_facts: true
  vars:
    test_install: "/tmp/test_install64"
    test_user: "testusr64"
    test_group: "testgrp64"
    test_install_pip: "/tmp/test_install64_pip"

  tasks:

    - name: "Example: Install binary package IBM Cloud CLI from the IBM site"
      vars:
        sys_package:
          resolve_prereq: true
          prepare: true
          provision: true
        sys_package_application:
          name: "ibmcloud"
          type: "binary"
          version: "v2_0_0"
          installed: true
        sys_package_profiles:
          binary:
            v2_0_0:
              origin: "https://download.clis.cloud.ibm.com/ibm-cloud-cli/2.0.0/binaries"
              packages:
                - file: "IBM_Cloud_CLI_2.0.0_linux_amd64.tgz"
                  uncompress: true
              paths:
                - target: "{{ test_install }}/ibm"
                  owner: "root"
                  mode: "0755"
              promotion:
                - target: "{{ test_install }}/ibm"
                  source: "IBM_Cloud_CLI/ibmcloud"
                  mode: "0755"
                  owner: "root"
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"

    - name: "Example: Install LSOF application from distro repository"
      vars:
        sys_package:
          resolve_prereq: true
          prepare: true
          provision: true
        sys_package_application:
          name: "lsof"
          type: "distro"
          version: "latest"
          installed: true
        sys_package_profiles:
          distro:
            latest:
              packages:
                - name: "lsof"
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"

    - name: "Example: Install FLATPAK DOSBox from FlatHub"
      vars:
        sys_package:
          resolve_prereq: true
          prepare: true
          provision: true
        sys_package_application:
          name: "DOSBox"
          type: "flatpak"
          version: "latest"
          installed: true
        sys_package_profiles:
          flatpak:
            latest:
              origin: "flathub"
              packages:
                - name: "com.dosbox.DOSBox"
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"

    - name: "Example: Install RPM Azure-CLI from the Microsoft site"
      vars:
        sys_package:
          resolve_prereq: true
          prepare: true
          provision: true
        sys_package_application:
          name: "azure-cli"
          type: "rpm"
          version: "latest"
          installed: true
        sys_package_profiles:
          rpm:
            latest:
              origin: "https://packages.microsoft.com/yumrepos/azure-cli"
              packages:
                - file: "azure-cli-2.21.0-1.el7.x86_64.rpm"
                  name: "azure-cli"
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"
      when:
        - ansible_distribution == 'CentOS' or
          ansible_distribution == 'OracleLinux' or
          ansible_distribution == 'Fedora'

    - name: "Example: Install SNAP ASCIInema from SnapCraft"
      vars:
        sys_package:
          resolve_prereq: true
          prepare: true
          provision: true
        sys_package_application:
          name: "asciinema"
          type: "snap"
          version: "latest"
          installed: true
        sys_package_profiles:
          snap:
            latest:
              packages:
                - name: "asciinema"
                  snap:
                    classic: true
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"

    - name: "Example: Install DEB RClone from RCLone site"
      vars:
        sys_package:
          resolve_prereq: true
          prepare: true
          provision: true
        sys_package_application:
          type: "deb"
          version: "v1_54_1"
          name: "rclone"
          installed: true
        sys_package_profiles:
          deb:
            v1_54_1:
              origin: "https://downloads.rclone.org/v1.54.1"
              packages:
                - file: "rclone-v1.54.1-linux-amd64.deb"
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"
      when:
        - ansible_distribution == 'Debian' or
          ansible_distribution == 'Ubuntu'


    - name: "Example: Install DEB RClone from RCLone site"
      vars:
        sys_package:
          resolve_prereq: true
          prepare: true
          provision: true
        sys_package_application:
          type: "pip"
          version: "latest"
          name: "mkdocs"
          installed: true
        sys_package_profiles:
          pip:
            latest:
              packages:
                - name: "mkdocs"
              options:
                pip:
                  owner: "{{ test_user }}"
                  group: "{{ test_group }}"
                  path: "{{ test_install_pip }}"
                  cli: "mkdocs"
      ansible.builtin.include_role:
        name: "serdigital64.system.sys_package"
...
